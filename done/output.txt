==1843== Memcheck, a memory error detector
==1843== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1843== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==1843== Command: ./unit-test-cpu-dispatch-week08
==1843== 
--1843-- Valgrind options:
--1843--    --leak-check=full
--1843--    -v
--1843-- Contents of /proc/version:
--1843--   Linux version 4.4.0-18362-Microsoft (Microsoft@Microsoft.com) (gcc version 5.4.0 (GCC) ) #476-Microsoft Fri Nov 01 16:53:00 PST 2019
--1843-- 
--1843-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--1843-- Page sizes: currently 4096, max supported 4096
--1843-- Valgrind library directory: /usr/lib/valgrind
--1843-- Reading syms from /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08
--1843-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--1843--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--1843--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--1843--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--1843--   .. CRC is valid
--1843-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--1843--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--1843--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--1843--    object doesn't have a symbol table
--1843--    object doesn't have a dynamic symbol table
--1843-- Scheduler: using generic scheduler lock implementation.
--1843-- Reading suppressions file: /usr/lib/valgrind/default.supp
==1843== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1843-by-wengle-on-???
==1843== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1843-by-wengle-on-???
==1843== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1843-by-wengle-on-???
==1843== 
==1843== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1843== don't want to do, unless you know exactly what you're doing,
==1843== or are doing some strange experiment):
==1843==   /usr/lib/valgrind/../../bin/vgdb --pid=1843 ...command...
==1843== 
==1843== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1843==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1843== and then give GDB the following command
==1843==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1843
==1843== --pid is optional if only one valgrind process is running
==1843== 
==1843== error calling PR_SET_PTRACER, vgdb might block
--1843-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--1843-- REDIR: 0x401f0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--1843-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--1843--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--1843--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--1843--    object doesn't have a symbol table
--1843-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--1843--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--1843--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--1843--    object doesn't have a symbol table
==1843== WARNING: new redirection conflicts with existing -- ignoring it
--1843--     old: 0x0401f2f0 (strlen              ) R-> (0000.0) 0x580608c1 ???
--1843--     new: 0x0401f2f0 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--1843-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--1843-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--1843-- Reading syms from /lib/x86_64-linux-gnu/libm-2.27.so
--1843--   Considering /lib/x86_64-linux-gnu/libm-2.27.so ..
--1843--   .. CRC mismatch (computed 7feae033 wanted b29b2508)
--1843--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.27.so ..
--1843--   .. CRC is valid
--1843-- Reading syms from /lib/x86_64-linux-gnu/librt-2.27.so
--1843--   Considering /lib/x86_64-linux-gnu/librt-2.27.so ..
--1843--   .. CRC mismatch (computed 16979484 wanted f9e041e3)
--1843--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/librt-2.27.so ..
--1843--   .. CRC is valid
--1843-- Reading syms from /usr/lib/x86_64-linux-gnu/libsubunit.so.0.0.0
--1843--    object doesn't have a symbol table
--1843-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.27.so
--1843--   Considering /usr/lib/debug/.build-id/28/c6aade70b2d40d1f0f3d0a1a0cad1ab816448f.debug ..
--1843--   .. build-id is valid
--1843-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--1843--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--1843--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--1843--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--1843--   .. CRC is valid
--1843-- REDIR: 0x58a1c70 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0d40 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1f50 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0790 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0d70 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a37c0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1de0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1c10 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0d00 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0800 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1d40 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58bf0f0 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0ca0 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0870 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1fa0 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0840 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a20e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0da0 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a07c0 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a0c70 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58ab6c0 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1ff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1be0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58bfeb0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1050 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1f20 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a1ef0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a37f0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x58a2040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--1843-- REDIR: 0x59913c0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--1843-- REDIR: 0x589a070 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--1843-- REDIR: 0x5991590 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--1843-- REDIR: 0x589bc30 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
--1843-- REDIR: 0x5988510 (libc.so.6:__strncmp_sse42) redirected to 0x4c33570 (__strncmp_sse42)
--1843-- REDIR: 0x59911d0 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--1843-- REDIR: 0x589a950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
Running suite(s):--1843-- REDIR: 0x5991ab0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
 cpu.c Dispatch Tests
--1844-- REDIR: 0x5991ad0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--1844-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1844== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1844-by-wengle-on-???
==1844== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1844-by-wengle-on-???
==1844== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1844-by-wengle-on-???
==1844== 
==1844== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1844== don't want to do, unless you know exactly what you're doing,
==1844== or are doing some strange experiment):
==1844==   /usr/lib/valgrind/../../bin/vgdb --pid=1844 ...command...
==1844== 
==1844== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1844==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1844== and then give GDB the following command
==1844==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1844
==1844== --pid is optional if only one valgrind process is running
==1844== 
==1844== error calling PR_SET_PTRACER, vgdb might block
==1844== 
==1844== HEAP SUMMARY:
==1844==     in use at exit: 5,004 bytes in 174 blocks
==1844==   total heap usage: 207 allocs, 33 frees, 14,017 bytes allocated
==1844== 
==1844== Searching for pointers to 174 not-freed blocks
==1844== Checked 102,784 bytes
==1844== 
==1844== LEAK SUMMARY:
==1844==    definitely lost: 0 bytes in 0 blocks
==1844==    indirectly lost: 0 bytes in 0 blocks
==1844==      possibly lost: 0 bytes in 0 blocks
==1844==    still reachable: 5,004 bytes in 174 blocks
==1844==         suppressed: 0 bytes in 0 blocks
==1844== Reachable blocks (those to which a pointer was found) are not shown.
==1844== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1844== 
==1844== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1844== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1843-- REDIR: 0x5991ad0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--1845-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1845== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1845-by-wengle-on-???
==1845== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1845-by-wengle-on-???
==1845== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1845-by-wengle-on-???
==1845== 
==1845== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1845== don't want to do, unless you know exactly what you're doing,
==1845== or are doing some strange experiment):
==1845==   /usr/lib/valgrind/../../bin/vgdb --pid=1845 ...command...
==1845== 
==1845== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1845==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1845== and then give GDB the following command
==1845==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1845
==1845== --pid is optional if only one valgrind process is running
==1845== 
==1845== error calling PR_SET_PTRACER, vgdb might block
--1845-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1845== 
==1845== HEAP SUMMARY:
==1845==     in use at exit: 5,099 bytes in 177 blocks
==1845==   total heap usage: 427 allocs, 250 frees, 100,478 bytes allocated
==1845== 
==1845== Searching for pointers to 177 not-freed blocks
==1845== Checked 102,936 bytes
==1845== 
==1845== LEAK SUMMARY:
==1845==    definitely lost: 0 bytes in 0 blocks
==1845==    indirectly lost: 0 bytes in 0 blocks
==1845==      possibly lost: 0 bytes in 0 blocks
==1845==    still reachable: 5,099 bytes in 177 blocks
==1845==         suppressed: 0 bytes in 0 blocks
==1845== Reachable blocks (those to which a pointer was found) are not shown.
==1845== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1845== 
==1845== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1845== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1846-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1846== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1846-by-wengle-on-???
==1846== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1846-by-wengle-on-???
==1846== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1846-by-wengle-on-???
==1846== 
==1846== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1846== don't want to do, unless you know exactly what you're doing,
==1846== or are doing some strange experiment):
==1846==   /usr/lib/valgrind/../../bin/vgdb --pid=1846 ...command...
==1846== 
==1846== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1846==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1846== and then give GDB the following command
==1846==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1846
==1846== --pid is optional if only one valgrind process is running
==1846== 
==1846== error calling PR_SET_PTRACER, vgdb might block
--1846-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1846== 
==1846== HEAP SUMMARY:
==1846==     in use at exit: 5,202 bytes in 180 blocks
==1846==   total heap usage: 646 allocs, 466 frees, 120,281 bytes allocated
==1846== 
==1846== Searching for pointers to 180 not-freed blocks
==1846== Checked 103,024 bytes
==1846== 
==1846== LEAK SUMMARY:
==1846==    definitely lost: 0 bytes in 0 blocks
==1846==    indirectly lost: 0 bytes in 0 blocks
==1846==      possibly lost: 0 bytes in 0 blocks
==1846==    still reachable: 5,202 bytes in 180 blocks
==1846==         suppressed: 0 bytes in 0 blocks
==1846== Reachable blocks (those to which a pointer was found) are not shown.
==1846== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1846== 
==1846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1847-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1847== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1847-by-wengle-on-???
==1847== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1847-by-wengle-on-???
==1847== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1847-by-wengle-on-???
==1847== 
==1847== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1847== don't want to do, unless you know exactly what you're doing,
==1847== or are doing some strange experiment):
==1847==   /usr/lib/valgrind/../../bin/vgdb --pid=1847 ...command...
==1847== 
==1847== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1847==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1847== and then give GDB the following command
==1847==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1847
==1847== --pid is optional if only one valgrind process is running
==1847== 
==1847== error calling PR_SET_PTRACER, vgdb might block
--1847-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1847== 
==1847== HEAP SUMMARY:
==1847==     in use at exit: 5,313 bytes in 183 blocks
==1847==   total heap usage: 865 allocs, 682 frees, 140,100 bytes allocated
==1847== 
==1847== Searching for pointers to 183 not-freed blocks
==1847== Checked 103,112 bytes
==1847== 
==1847== LEAK SUMMARY:
==1847==    definitely lost: 0 bytes in 0 blocks
==1847==    indirectly lost: 0 bytes in 0 blocks
==1847==      possibly lost: 0 bytes in 0 blocks
==1847==    still reachable: 5,313 bytes in 183 blocks
==1847==         suppressed: 0 bytes in 0 blocks
==1847== Reachable blocks (those to which a pointer was found) are not shown.
==1847== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1847== 
==1847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1848-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1848== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1848-by-wengle-on-???
==1848== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1848-by-wengle-on-???
==1848== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1848-by-wengle-on-???
==1848== 
==1848== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1848== don't want to do, unless you know exactly what you're doing,
==1848== or are doing some strange experiment):
==1848==   /usr/lib/valgrind/../../bin/vgdb --pid=1848 ...command...
==1848== 
==1848== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1848==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1848== and then give GDB the following command
==1848==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1848
==1848== --pid is optional if only one valgrind process is running
==1848== 
==1848== error calling PR_SET_PTRACER, vgdb might block
--1848-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1848== 
==1848== HEAP SUMMARY:
==1848==     in use at exit: 5,408 bytes in 186 blocks
==1848==   total heap usage: 1,083 allocs, 897 frees, 159,887 bytes allocated
==1848== 
==1848== Searching for pointers to 186 not-freed blocks
==1848== Checked 103,200 bytes
==1848== 
==1848== LEAK SUMMARY:
==1848==    definitely lost: 0 bytes in 0 blocks
==1848==    indirectly lost: 0 bytes in 0 blocks
==1848==      possibly lost: 0 bytes in 0 blocks
==1848==    still reachable: 5,408 bytes in 186 blocks
==1848==         suppressed: 0 bytes in 0 blocks
==1848== Reachable blocks (those to which a pointer was found) are not shown.
==1848== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1848== 
==1848== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1848== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1849-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1849== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1849-by-wengle-on-???
==1849== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1849-by-wengle-on-???
==1849== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1849-by-wengle-on-???
==1849== 
==1849== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1849== don't want to do, unless you know exactly what you're doing,
==1849== or are doing some strange experiment):
==1849==   /usr/lib/valgrind/../../bin/vgdb --pid=1849 ...command...
==1849== 
==1849== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1849==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1849== and then give GDB the following command
==1849==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1849
==1849== --pid is optional if only one valgrind process is running
==1849== 
==1849== error calling PR_SET_PTRACER, vgdb might block
--1849-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1849== 
==1849== HEAP SUMMARY:
==1849==     in use at exit: 5,535 bytes in 189 blocks
==1849==   total heap usage: 2,212 allocs, 2,023 frees, 606,725 bytes allocated
==1849== 
==1849== Searching for pointers to 189 not-freed blocks
==1849== Checked 103,288 bytes
==1849== 
==1849== LEAK SUMMARY:
==1849==    definitely lost: 0 bytes in 0 blocks
==1849==    indirectly lost: 0 bytes in 0 blocks
==1849==      possibly lost: 0 bytes in 0 blocks
==1849==    still reachable: 5,535 bytes in 189 blocks
==1849==         suppressed: 0 bytes in 0 blocks
==1849== Reachable blocks (those to which a pointer was found) are not shown.
==1849== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1849== 
==1849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1850-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1850== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1850-by-wengle-on-???
==1850== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1850-by-wengle-on-???
==1850== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1850-by-wengle-on-???
==1850== 
==1850== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1850== don't want to do, unless you know exactly what you're doing,
==1850== or are doing some strange experiment):
==1850==   /usr/lib/valgrind/../../bin/vgdb --pid=1850 ...command...
==1850== 
==1850== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1850==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1850== and then give GDB the following command
==1850==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1850
==1850== --pid is optional if only one valgrind process is running
==1850== 
==1850== error calling PR_SET_PTRACER, vgdb might block
--1850-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1850== 
==1850== HEAP SUMMARY:
==1850==     in use at exit: 5,630 bytes in 192 blocks
==1850==   total heap usage: 3,328 allocs, 3,136 frees, 655,248 bytes allocated
==1850== 
==1850== Searching for pointers to 192 not-freed blocks
==1850== Checked 103,376 bytes
==1850== 
==1850== LEAK SUMMARY:
==1850==    definitely lost: 0 bytes in 0 blocks
==1850==    indirectly lost: 0 bytes in 0 blocks
==1850==      possibly lost: 0 bytes in 0 blocks
==1850==    still reachable: 5,630 bytes in 192 blocks
==1850==         suppressed: 0 bytes in 0 blocks
==1850== Reachable blocks (those to which a pointer was found) are not shown.
==1850== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1850== 
==1850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1851-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1851== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1851-by-wengle-on-???
==1851== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1851-by-wengle-on-???
==1851== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1851-by-wengle-on-???
==1851== 
==1851== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1851== don't want to do, unless you know exactly what you're doing,
==1851== or are doing some strange experiment):
==1851==   /usr/lib/valgrind/../../bin/vgdb --pid=1851 ...command...
==1851== 
==1851== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1851==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1851== and then give GDB the following command
==1851==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1851
==1851== --pid is optional if only one valgrind process is running
==1851== 
==1851== error calling PR_SET_PTRACER, vgdb might block
--1851-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1851== 
==1851== HEAP SUMMARY:
==1851==     in use at exit: 5,725 bytes in 195 blocks
==1851==   total heap usage: 3,628 allocs, 3,433 frees, 476,740 bytes allocated
==1851== 
==1851== Searching for pointers to 195 not-freed blocks
==1851== Checked 103,464 bytes
==1851== 
==1851== LEAK SUMMARY:
==1851==    definitely lost: 0 bytes in 0 blocks
==1851==    indirectly lost: 0 bytes in 0 blocks
==1851==      possibly lost: 0 bytes in 0 blocks
==1851==    still reachable: 5,725 bytes in 195 blocks
==1851==         suppressed: 0 bytes in 0 blocks
==1851== Reachable blocks (those to which a pointer was found) are not shown.
==1851== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1851== 
==1851== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1851== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1852-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1852== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1852-by-wengle-on-???
==1852== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1852-by-wengle-on-???
==1852== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1852-by-wengle-on-???
==1852== 
==1852== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1852== don't want to do, unless you know exactly what you're doing,
==1852== or are doing some strange experiment):
==1852==   /usr/lib/valgrind/../../bin/vgdb --pid=1852 ...command...
==1852== 
==1852== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1852==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1852== and then give GDB the following command
==1852==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1852
==1852== --pid is optional if only one valgrind process is running
==1852== 
==1852== error calling PR_SET_PTRACER, vgdb might block
--1852-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1852== 
==1852== HEAP SUMMARY:
==1852==     in use at exit: 5,820 bytes in 198 blocks
==1852==   total heap usage: 4,162 allocs, 3,964 frees, 704,324 bytes allocated
==1852== 
==1852== Searching for pointers to 198 not-freed blocks
==1852== Checked 103,552 bytes
==1852== 
==1852== LEAK SUMMARY:
==1852==    definitely lost: 0 bytes in 0 blocks
==1852==    indirectly lost: 0 bytes in 0 blocks
==1852==      possibly lost: 0 bytes in 0 blocks
==1852==    still reachable: 5,820 bytes in 198 blocks
==1852==         suppressed: 0 bytes in 0 blocks
==1852== Reachable blocks (those to which a pointer was found) are not shown.
==1852== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1852== 
==1852== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1852== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1853-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1853== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1853-by-wengle-on-???
==1853== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1853-by-wengle-on-???
==1853== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1853-by-wengle-on-???
==1853== 
==1853== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1853== don't want to do, unless you know exactly what you're doing,
==1853== or are doing some strange experiment):
==1853==   /usr/lib/valgrind/../../bin/vgdb --pid=1853 ...command...
==1853== 
==1853== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1853==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1853== and then give GDB the following command
==1853==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1853
==1853== --pid is optional if only one valgrind process is running
==1853== 
==1853== error calling PR_SET_PTRACER, vgdb might block
--1853-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1853== 
==1853== HEAP SUMMARY:
==1853==     in use at exit: 5,979 bytes in 201 blocks
==1853==   total heap usage: 4,387 allocs, 4,186 frees, 460,851 bytes allocated
==1853== 
==1853== Searching for pointers to 201 not-freed blocks
==1853== Checked 103,640 bytes
==1853== 
==1853== LEAK SUMMARY:
==1853==    definitely lost: 0 bytes in 0 blocks
==1853==    indirectly lost: 0 bytes in 0 blocks
==1853==      possibly lost: 0 bytes in 0 blocks
==1853==    still reachable: 5,979 bytes in 201 blocks
==1853==         suppressed: 0 bytes in 0 blocks
==1853== Reachable blocks (those to which a pointer was found) are not shown.
==1853== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1853== 
==1853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1854-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1854== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1854-by-wengle-on-???
==1854== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1854-by-wengle-on-???
==1854== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1854-by-wengle-on-???
==1854== 
==1854== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1854== don't want to do, unless you know exactly what you're doing,
==1854== or are doing some strange experiment):
==1854==   /usr/lib/valgrind/../../bin/vgdb --pid=1854 ...command...
==1854== 
==1854== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1854==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1854== and then give GDB the following command
==1854==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1854
==1854== --pid is optional if only one valgrind process is running
==1854== 
==1854== error calling PR_SET_PTRACER, vgdb might block
--1854-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1854== 
==1854== HEAP SUMMARY:
==1854==     in use at exit: 6,074 bytes in 204 blocks
==1854==   total heap usage: 5,791 allocs, 5,587 frees, 1,245,283 bytes allocated
==1854== 
==1854== Searching for pointers to 204 not-freed blocks
==1854== Checked 103,728 bytes
==1854== 
==1854== LEAK SUMMARY:
==1854==    definitely lost: 0 bytes in 0 blocks
==1854==    indirectly lost: 0 bytes in 0 blocks
==1854==      possibly lost: 0 bytes in 0 blocks
==1854==    still reachable: 6,074 bytes in 204 blocks
==1854==         suppressed: 0 bytes in 0 blocks
==1854== Reachable blocks (those to which a pointer was found) are not shown.
==1854== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1854== 
==1854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1855-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1855== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1855-by-wengle-on-???
==1855== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1855-by-wengle-on-???
==1855== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1855-by-wengle-on-???
==1855== 
==1855== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1855== don't want to do, unless you know exactly what you're doing,
==1855== or are doing some strange experiment):
==1855==   /usr/lib/valgrind/../../bin/vgdb --pid=1855 ...command...
==1855== 
==1855== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1855==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1855== and then give GDB the following command
==1855==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1855
==1855== --pid is optional if only one valgrind process is running
==1855== 
==1855== error calling PR_SET_PTRACER, vgdb might block
--1855-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1855== 
==1855== HEAP SUMMARY:
==1855==     in use at exit: 6,169 bytes in 207 blocks
==1855==   total heap usage: 6,557 allocs, 6,350 frees, 820,879 bytes allocated
==1855== 
==1855== Searching for pointers to 207 not-freed blocks
==1855== Checked 103,816 bytes
==1855== 
==1855== LEAK SUMMARY:
==1855==    definitely lost: 0 bytes in 0 blocks
==1855==    indirectly lost: 0 bytes in 0 blocks
==1855==      possibly lost: 0 bytes in 0 blocks
==1855==    still reachable: 6,169 bytes in 207 blocks
==1855==         suppressed: 0 bytes in 0 blocks
==1855== Reachable blocks (those to which a pointer was found) are not shown.
==1855== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1855== 
==1855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1856-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1856== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1856-by-wengle-on-???
==1856== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1856-by-wengle-on-???
==1856== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1856-by-wengle-on-???
==1856== 
==1856== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1856== don't want to do, unless you know exactly what you're doing,
==1856== or are doing some strange experiment):
==1856==   /usr/lib/valgrind/../../bin/vgdb --pid=1856 ...command...
==1856== 
==1856== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1856==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1856== and then give GDB the following command
==1856==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1856
==1856== --pid is optional if only one valgrind process is running
==1856== 
==1856== error calling PR_SET_PTRACER, vgdb might block
--1856-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1856== 
==1856== HEAP SUMMARY:
==1856==     in use at exit: 6,264 bytes in 210 blocks
==1856==   total heap usage: 7,673 allocs, 7,463 frees, 871,250 bytes allocated
==1856== 
==1856== Searching for pointers to 210 not-freed blocks
==1856== Checked 103,904 bytes
==1856== 
==1856== LEAK SUMMARY:
==1856==    definitely lost: 0 bytes in 0 blocks
==1856==    indirectly lost: 0 bytes in 0 blocks
==1856==      possibly lost: 0 bytes in 0 blocks
==1856==    still reachable: 6,264 bytes in 210 blocks
==1856==         suppressed: 0 bytes in 0 blocks
==1856== Reachable blocks (those to which a pointer was found) are not shown.
==1856== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1856== 
==1856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1857-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1857== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1857-by-wengle-on-???
==1857== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1857-by-wengle-on-???
==1857== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1857-by-wengle-on-???
==1857== 
==1857== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1857== don't want to do, unless you know exactly what you're doing,
==1857== or are doing some strange experiment):
==1857==   /usr/lib/valgrind/../../bin/vgdb --pid=1857 ...command...
==1857== 
==1857== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1857==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1857== and then give GDB the following command
==1857==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1857
==1857== --pid is optional if only one valgrind process is running
==1857== 
==1857== error calling PR_SET_PTRACER, vgdb might block
--1857-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1857== 
==1857== HEAP SUMMARY:
==1857==     in use at exit: 6,359 bytes in 213 blocks
==1857==   total heap usage: 15,743 allocs, 15,530 frees, 787,686 bytes allocated
==1857== 
==1857== Searching for pointers to 213 not-freed blocks
==1857== Checked 103,992 bytes
==1857== 
==1857== LEAK SUMMARY:
==1857==    definitely lost: 0 bytes in 0 blocks
==1857==    indirectly lost: 0 bytes in 0 blocks
==1857==      possibly lost: 0 bytes in 0 blocks
==1857==    still reachable: 6,359 bytes in 213 blocks
==1857==         suppressed: 0 bytes in 0 blocks
==1857== Reachable blocks (those to which a pointer was found) are not shown.
==1857== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1857== 
==1857== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1857== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1858-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1858== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1858-by-wengle-on-???
==1858== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1858-by-wengle-on-???
==1858== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1858-by-wengle-on-???
==1858== 
==1858== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1858== don't want to do, unless you know exactly what you're doing,
==1858== or are doing some strange experiment):
==1858==   /usr/lib/valgrind/../../bin/vgdb --pid=1858 ...command...
==1858== 
==1858== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1858==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1858== and then give GDB the following command
==1858==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1858
==1858== --pid is optional if only one valgrind process is running
==1858== 
==1858== error calling PR_SET_PTRACER, vgdb might block
--1858-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1858== 
==1858== HEAP SUMMARY:
==1858==     in use at exit: 6,454 bytes in 216 blocks
==1858==   total heap usage: 23,825 allocs, 23,609 frees, 1,059,121 bytes allocated
==1858== 
==1858== Searching for pointers to 216 not-freed blocks
==1858== Checked 104,080 bytes
==1858== 
==1858== LEAK SUMMARY:
==1858==    definitely lost: 0 bytes in 0 blocks
==1858==    indirectly lost: 0 bytes in 0 blocks
==1858==      possibly lost: 0 bytes in 0 blocks
==1858==    still reachable: 6,454 bytes in 216 blocks
==1858==         suppressed: 0 bytes in 0 blocks
==1858== Reachable blocks (those to which a pointer was found) are not shown.
==1858== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1858== 
==1858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1859-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1859== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1859-by-wengle-on-???
==1859== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1859-by-wengle-on-???
==1859== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1859-by-wengle-on-???
==1859== 
==1859== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1859== don't want to do, unless you know exactly what you're doing,
==1859== or are doing some strange experiment):
==1859==   /usr/lib/valgrind/../../bin/vgdb --pid=1859 ...command...
==1859== 
==1859== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1859==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1859== and then give GDB the following command
==1859==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1859
==1859== --pid is optional if only one valgrind process is running
==1859== 
==1859== error calling PR_SET_PTRACER, vgdb might block
--1859-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1859== 
==1859== HEAP SUMMARY:
==1859==     in use at exit: 6,549 bytes in 219 blocks
==1859==   total heap usage: 23,875 allocs, 23,656 frees, 1,029,356 bytes allocated
==1859== 
==1859== Searching for pointers to 219 not-freed blocks
==1859== Checked 104,168 bytes
==1859== 
==1859== LEAK SUMMARY:
==1859==    definitely lost: 0 bytes in 0 blocks
==1859==    indirectly lost: 0 bytes in 0 blocks
==1859==      possibly lost: 0 bytes in 0 blocks
==1859==    still reachable: 6,549 bytes in 219 blocks
==1859==         suppressed: 0 bytes in 0 blocks
==1859== Reachable blocks (those to which a pointer was found) are not shown.
==1859== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1859== 
==1859== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1859== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1860-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1860== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1860-by-wengle-on-???
==1860== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1860-by-wengle-on-???
==1860== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1860-by-wengle-on-???
==1860== 
==1860== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1860== don't want to do, unless you know exactly what you're doing,
==1860== or are doing some strange experiment):
==1860==   /usr/lib/valgrind/../../bin/vgdb --pid=1860 ...command...
==1860== 
==1860== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1860==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1860== and then give GDB the following command
==1860==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1860
==1860== --pid is optional if only one valgrind process is running
==1860== 
==1860== error calling PR_SET_PTRACER, vgdb might block
--1860-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1860== 
==1860== HEAP SUMMARY:
==1860==     in use at exit: 6,644 bytes in 222 blocks
==1860==   total heap usage: 23,925 allocs, 23,703 frees, 1,043,767 bytes allocated
==1860== 
==1860== Searching for pointers to 222 not-freed blocks
==1860== Checked 104,256 bytes
==1860== 
==1860== LEAK SUMMARY:
==1860==    definitely lost: 0 bytes in 0 blocks
==1860==    indirectly lost: 0 bytes in 0 blocks
==1860==      possibly lost: 0 bytes in 0 blocks
==1860==    still reachable: 6,644 bytes in 222 blocks
==1860==         suppressed: 0 bytes in 0 blocks
==1860== Reachable blocks (those to which a pointer was found) are not shown.
==1860== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1860== 
==1860== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1860== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1861== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1861-by-wengle-on-???
==1861== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1861-by-wengle-on-???
==1861== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1861-by-wengle-on-???
==1861== 
==1861== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1861== don't want to do, unless you know exactly what you're doing,
==1861== or are doing some strange experiment):
==1861==   /usr/lib/valgrind/../../bin/vgdb --pid=1861 ...command...
==1861== 
==1861== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1861==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1861== and then give GDB the following command
==1861==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1861
==1861== --pid is optional if only one valgrind process is running
==1861== 
==1861== error calling PR_SET_PTRACER, vgdb might block
--1861-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
--1861-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1861== 
==1861== HEAP SUMMARY:
==1861==     in use at exit: 6,867 bytes in 225 blocks
==1861==   total heap usage: 23,976 allocs, 23,751 frees, 1,058,434 bytes allocated
==1861== 
==1861== Searching for pointers to 225 not-freed blocks
==1861== Checked 104,344 bytes
==1861== 
==1861== LEAK SUMMARY:
==1861==    definitely lost: 0 bytes in 0 blocks
==1861==    indirectly lost: 0 bytes in 0 blocks
==1861==      possibly lost: 0 bytes in 0 blocks
==1861==    still reachable: 6,867 bytes in 225 blocks
==1861==         suppressed: 0 bytes in 0 blocks
==1861== Reachable blocks (those to which a pointer was found) are not shown.
==1861== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1861== 
==1861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1862-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1862== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1862-by-wengle-on-???
==1862== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1862-by-wengle-on-???
==1862== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1862-by-wengle-on-???
==1862== 
==1862== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1862== don't want to do, unless you know exactly what you're doing,
==1862== or are doing some strange experiment):
==1862==   /usr/lib/valgrind/../../bin/vgdb --pid=1862 ...command...
==1862== 
==1862== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1862==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1862== and then give GDB the following command
==1862==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1862
==1862== --pid is optional if only one valgrind process is running
==1862== 
==1862== error calling PR_SET_PTRACER, vgdb might block
--1862-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1862== Invalid write of size 1
==1862==    at 0x128533: test_LD_A_HLRU (unit-test-cpu-dispatch-week08.c:936)
==1862==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1862==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1862==  Address 0xffffffff is not stack'd, malloc'd or (recently) free'd
==1862== 
==1862== 
==1862== Process terminating with default action of signal 11 (SIGSEGV)
==1862==  Access not within mapped region at address 0xFFFFFFFF
==1862==    at 0x128533: test_LD_A_HLRU (unit-test-cpu-dispatch-week08.c:936)
==1862==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1862==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1862==  If you believe this happened as a result of a stack
==1862==  overflow in your program's main thread (unlikely but
==1862==  possible), you can try to increase the size of the
==1862==  main thread stack using the --main-stacksize= flag.
==1862==  The main thread stack size used in this run was 8388608.
==1862== 
==1862== HEAP SUMMARY:
==1862==     in use at exit: 72,514 bytes in 230 blocks
==1862==   total heap usage: 23,993 allocs, 23,763 frees, 1,071,637 bytes allocated
==1862== 
==1862== Searching for pointers to 230 not-freed blocks
==1862== Checked 759,896 bytes
==1862== 
==1862== LEAK SUMMARY:
==1862==    definitely lost: 0 bytes in 0 blocks
==1862==    indirectly lost: 0 bytes in 0 blocks
==1862==      possibly lost: 0 bytes in 0 blocks
==1862==    still reachable: 72,514 bytes in 230 blocks
==1862==         suppressed: 0 bytes in 0 blocks
==1862== Reachable blocks (those to which a pointer was found) are not shown.
==1862== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1862== 
==1862== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1862== 
==1862== 1 errors in context 1 of 1:
==1862== Invalid write of size 1
==1862==    at 0x128533: test_LD_A_HLRU (unit-test-cpu-dispatch-week08.c:936)
==1862==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1862==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1862==  Address 0xffffffff is not stack'd, malloc'd or (recently) free'd
==1862== 
==1862== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1843-- REDIR: 0x5982c80 (libc.so.6:__stpcpy_ssse3) redirected to 0x4c35f60 (stpcpy)
--1863-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1863== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1863-by-wengle-on-???
==1863== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1863-by-wengle-on-???
==1863== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1863-by-wengle-on-???
==1863== 
==1863== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1863== don't want to do, unless you know exactly what you're doing,
==1863== or are doing some strange experiment):
==1863==   /usr/lib/valgrind/../../bin/vgdb --pid=1863 ...command...
==1863== 
==1863== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1863==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1863== and then give GDB the following command
==1863==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1863
==1863== --pid is optional if only one valgrind process is running
==1863== 
==1863== error calling PR_SET_PTRACER, vgdb might block
--1863-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1863== 
==1863== HEAP SUMMARY:
==1863==     in use at exit: 7,150 bytes in 231 blocks
==1863==   total heap usage: 24,060 allocs, 23,829 frees, 1,086,925 bytes allocated
==1863== 
==1863== Searching for pointers to 231 not-freed blocks
==1863== Checked 104,568 bytes
==1863== 
==1863== LEAK SUMMARY:
==1863==    definitely lost: 0 bytes in 0 blocks
==1863==    indirectly lost: 0 bytes in 0 blocks
==1863==      possibly lost: 0 bytes in 0 blocks
==1863==    still reachable: 7,150 bytes in 231 blocks
==1863==         suppressed: 0 bytes in 0 blocks
==1863== Reachable blocks (those to which a pointer was found) are not shown.
==1863== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1863== 
==1863== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1863== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1864-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1864== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1864-by-wengle-on-???
==1864== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1864-by-wengle-on-???
==1864== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1864-by-wengle-on-???
==1864== 
==1864== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1864== don't want to do, unless you know exactly what you're doing,
==1864== or are doing some strange experiment):
==1864==   /usr/lib/valgrind/../../bin/vgdb --pid=1864 ...command...
==1864== 
==1864== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1864==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1864== and then give GDB the following command
==1864==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1864
==1864== --pid is optional if only one valgrind process is running
==1864== 
==1864== error calling PR_SET_PTRACER, vgdb might block
--1864-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1864== Invalid write of size 1
==1864==    at 0x128E0F: test_LD_A_N16R (unit-test-cpu-dispatch-week08.c:975)
==1864==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1864==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1864==  Address 0x10100ffdead0000 is not stack'd, malloc'd or (recently) free'd
==1864== 
==1864== 
==1864== Process terminating with default action of signal 11 (SIGSEGV)
==1864==  General Protection Fault
==1864==    at 0x128E0F: test_LD_A_N16R (unit-test-cpu-dispatch-week08.c:975)
==1864==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1864==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1864== 
==1864== HEAP SUMMARY:
==1864==     in use at exit: 72,797 bytes in 236 blocks
==1864==   total heap usage: 24,077 allocs, 23,841 frees, 1,100,040 bytes allocated
==1864== 
==1864== Searching for pointers to 236 not-freed blocks
==1864== Checked 760,120 bytes
==1864== 
==1864== LEAK SUMMARY:
==1864==    definitely lost: 0 bytes in 0 blocks
==1864==    indirectly lost: 0 bytes in 0 blocks
==1864==      possibly lost: 0 bytes in 0 blocks
==1864==    still reachable: 72,797 bytes in 236 blocks
==1864==         suppressed: 0 bytes in 0 blocks
==1864== Reachable blocks (those to which a pointer was found) are not shown.
==1864== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1864== 
==1864== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1864== 
==1864== 1 errors in context 1 of 1:
==1864== Invalid write of size 1
==1864==    at 0x128E0F: test_LD_A_N16R (unit-test-cpu-dispatch-week08.c:975)
==1864==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1864==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1864==  Address 0x10100ffdead0000 is not stack'd, malloc'd or (recently) free'd
==1864== 
==1864== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1865-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1865== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1865-by-wengle-on-???
==1865== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1865-by-wengle-on-???
==1865== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1865-by-wengle-on-???
==1865== 
==1865== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1865== don't want to do, unless you know exactly what you're doing,
==1865== or are doing some strange experiment):
==1865==   /usr/lib/valgrind/../../bin/vgdb --pid=1865 ...command...
==1865== 
==1865== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1865==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1865== and then give GDB the following command
==1865==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1865
==1865== --pid is optional if only one valgrind process is running
==1865== 
==1865== error calling PR_SET_PTRACER, vgdb might block
--1865-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1865== 
==1865== HEAP SUMMARY:
==1865==     in use at exit: 7,433 bytes in 237 blocks
==1865==   total heap usage: 24,128 allocs, 23,891 frees, 1,114,728 bytes allocated
==1865== 
==1865== Searching for pointers to 237 not-freed blocks
==1865== Checked 104,784 bytes
==1865== 
==1865== LEAK SUMMARY:
==1865==    definitely lost: 0 bytes in 0 blocks
==1865==    indirectly lost: 0 bytes in 0 blocks
==1865==      possibly lost: 0 bytes in 0 blocks
==1865==    still reachable: 7,433 bytes in 237 blocks
==1865==         suppressed: 0 bytes in 0 blocks
==1865== Reachable blocks (those to which a pointer was found) are not shown.
==1865== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1865== 
==1865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1866-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1866== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1866-by-wengle-on-???
==1866== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1866-by-wengle-on-???
==1866== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1866-by-wengle-on-???
==1866== 
==1866== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1866== don't want to do, unless you know exactly what you're doing,
==1866== or are doing some strange experiment):
==1866==   /usr/lib/valgrind/../../bin/vgdb --pid=1866 ...command...
==1866== 
==1866== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1866==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1866== and then give GDB the following command
==1866==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1866
==1866== --pid is optional if only one valgrind process is running
==1866== 
==1866== error calling PR_SET_PTRACER, vgdb might block
--1866-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1866== Invalid write of size 1
==1866==    at 0x12991C: test_LD_R16SP_N16 (unit-test-cpu-dispatch-week08.c:1038)
==1866==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1866==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1866==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1866== 
==1866== 
==1866== Process terminating with default action of signal 11 (SIGSEGV)
==1866==  Access not within mapped region at address 0x101
==1866==    at 0x12991C: test_LD_R16SP_N16 (unit-test-cpu-dispatch-week08.c:1038)
==1866==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1866==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1866==  If you believe this happened as a result of a stack
==1866==  overflow in your program's main thread (unlikely but
==1866==  possible), you can try to increase the size of the
==1866==  main thread stack using the --main-stacksize= flag.
==1866==  The main thread stack size used in this run was 8388608.
==1866== 
==1866== HEAP SUMMARY:
==1866==     in use at exit: 73,080 bytes in 242 blocks
==1866==   total heap usage: 24,145 allocs, 23,903 frees, 1,127,931 bytes allocated
==1866== 
==1866== Searching for pointers to 242 not-freed blocks
==1866== Checked 760,328 bytes
==1866== 
==1866== LEAK SUMMARY:
==1866==    definitely lost: 0 bytes in 0 blocks
==1866==    indirectly lost: 0 bytes in 0 blocks
==1866==      possibly lost: 0 bytes in 0 blocks
==1866==    still reachable: 73,080 bytes in 242 blocks
==1866==         suppressed: 0 bytes in 0 blocks
==1866== Reachable blocks (those to which a pointer was found) are not shown.
==1866== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1866== 
==1866== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1866== 
==1866== 1 errors in context 1 of 1:
==1866== Invalid write of size 1
==1866==    at 0x12991C: test_LD_R16SP_N16 (unit-test-cpu-dispatch-week08.c:1038)
==1866==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1866==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1866==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1866== 
==1866== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1867-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1867== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1867-by-wengle-on-???
==1867== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1867-by-wengle-on-???
==1867== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1867-by-wengle-on-???
==1867== 
==1867== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1867== don't want to do, unless you know exactly what you're doing,
==1867== or are doing some strange experiment):
==1867==   /usr/lib/valgrind/../../bin/vgdb --pid=1867 ...command...
==1867== 
==1867== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1867==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1867== and then give GDB the following command
==1867==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1867
==1867== --pid is optional if only one valgrind process is running
==1867== 
==1867== error calling PR_SET_PTRACER, vgdb might block
--1867-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1867== 
==1867== HEAP SUMMARY:
==1867==     in use at exit: 7,716 bytes in 243 blocks
==1867==   total heap usage: 24,388 allocs, 24,145 frees, 1,149,819 bytes allocated
==1867== 
==1867== Searching for pointers to 243 not-freed blocks
==1867== Checked 105,000 bytes
==1867== 
==1867== LEAK SUMMARY:
==1867==    definitely lost: 0 bytes in 0 blocks
==1867==    indirectly lost: 0 bytes in 0 blocks
==1867==      possibly lost: 0 bytes in 0 blocks
==1867==    still reachable: 7,716 bytes in 243 blocks
==1867==         suppressed: 0 bytes in 0 blocks
==1867== Reachable blocks (those to which a pointer was found) are not shown.
==1867== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1867== 
==1867== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1867== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1868-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1868== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1868-by-wengle-on-???
==1868== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1868-by-wengle-on-???
==1868== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1868-by-wengle-on-???
==1868== 
==1868== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1868== don't want to do, unless you know exactly what you're doing,
==1868== or are doing some strange experiment):
==1868==   /usr/lib/valgrind/../../bin/vgdb --pid=1868 ...command...
==1868== 
==1868== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1868==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1868== and then give GDB the following command
==1868==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1868
==1868== --pid is optional if only one valgrind process is running
==1868== 
==1868== error calling PR_SET_PTRACER, vgdb might block
--1868-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1868== Invalid write of size 1
==1868==    at 0x12A41C: test_LD_R8_HLR (unit-test-cpu-dispatch-week08.c:1073)
==1868==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1868==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1868==  Address 0x1000100000000 is not stack'd, malloc'd or (recently) free'd
==1868== 
==1868== 
==1868== Process terminating with default action of signal 11 (SIGSEGV)
==1868==  General Protection Fault
==1868==    at 0x12A41C: test_LD_R8_HLR (unit-test-cpu-dispatch-week08.c:1073)
==1868==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1868==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1868== 
==1868== HEAP SUMMARY:
==1868==     in use at exit: 73,363 bytes in 248 blocks
==1868==   total heap usage: 24,405 allocs, 24,157 frees, 1,161,966 bytes allocated
==1868== 
==1868== Searching for pointers to 248 not-freed blocks
==1868== Checked 760,536 bytes
==1868== 
==1868== LEAK SUMMARY:
==1868==    definitely lost: 0 bytes in 0 blocks
==1868==    indirectly lost: 0 bytes in 0 blocks
==1868==      possibly lost: 0 bytes in 0 blocks
==1868==    still reachable: 73,363 bytes in 248 blocks
==1868==         suppressed: 0 bytes in 0 blocks
==1868== Reachable blocks (those to which a pointer was found) are not shown.
==1868== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1868== 
==1868== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1868== 
==1868== 1 errors in context 1 of 1:
==1868== Invalid write of size 1
==1868==    at 0x12A41C: test_LD_R8_HLR (unit-test-cpu-dispatch-week08.c:1073)
==1868==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1868==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1868==  Address 0x1000100000000 is not stack'd, malloc'd or (recently) free'd
==1868== 
==1868== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1869-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1869== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1869-by-wengle-on-???
==1869== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1869-by-wengle-on-???
==1869== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1869-by-wengle-on-???
==1869== 
==1869== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1869== don't want to do, unless you know exactly what you're doing,
==1869== or are doing some strange experiment):
==1869==   /usr/lib/valgrind/../../bin/vgdb --pid=1869 ...command...
==1869== 
==1869== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1869==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1869== and then give GDB the following command
==1869==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1869
==1869== --pid is optional if only one valgrind process is running
==1869== 
==1869== error calling PR_SET_PTRACER, vgdb might block
--1869-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1869== 
==1869== HEAP SUMMARY:
==1869==     in use at exit: 7,999 bytes in 249 blocks
==1869==   total heap usage: 24,456 allocs, 24,207 frees, 1,176,654 bytes allocated
==1869== 
==1869== Searching for pointers to 249 not-freed blocks
==1869== Checked 105,216 bytes
==1869== 
==1869== LEAK SUMMARY:
==1869==    definitely lost: 0 bytes in 0 blocks
==1869==    indirectly lost: 0 bytes in 0 blocks
==1869==      possibly lost: 0 bytes in 0 blocks
==1869==    still reachable: 7,999 bytes in 249 blocks
==1869==         suppressed: 0 bytes in 0 blocks
==1869== Reachable blocks (those to which a pointer was found) are not shown.
==1869== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1869== 
==1869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1870-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1870== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1870-by-wengle-on-???
==1870== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1870-by-wengle-on-???
==1870== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1870-by-wengle-on-???
==1870== 
==1870== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1870== don't want to do, unless you know exactly what you're doing,
==1870== or are doing some strange experiment):
==1870==   /usr/lib/valgrind/../../bin/vgdb --pid=1870 ...command...
==1870== 
==1870== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1870==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1870== and then give GDB the following command
==1870==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1870
==1870== --pid is optional if only one valgrind process is running
==1870== 
==1870== error calling PR_SET_PTRACER, vgdb might block
--1870-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1870== 
==1870== HEAP SUMMARY:
==1870==     in use at exit: 8,094 bytes in 252 blocks
==1870==   total heap usage: 24,506 allocs, 24,254 frees, 1,191,065 bytes allocated
==1870== 
==1870== Searching for pointers to 252 not-freed blocks
==1870== Checked 105,304 bytes
==1870== 
==1870== LEAK SUMMARY:
==1870==    definitely lost: 0 bytes in 0 blocks
==1870==    indirectly lost: 0 bytes in 0 blocks
==1870==      possibly lost: 0 bytes in 0 blocks
==1870==    still reachable: 8,094 bytes in 252 blocks
==1870==         suppressed: 0 bytes in 0 blocks
==1870== Reachable blocks (those to which a pointer was found) are not shown.
==1870== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1870== 
==1870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1871-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1871== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1871-by-wengle-on-???
==1871== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1871-by-wengle-on-???
==1871== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1871-by-wengle-on-???
==1871== 
==1871== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1871== don't want to do, unless you know exactly what you're doing,
==1871== or are doing some strange experiment):
==1871==   /usr/lib/valgrind/../../bin/vgdb --pid=1871 ...command...
==1871== 
==1871== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1871==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1871== and then give GDB the following command
==1871==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1871
==1871== --pid is optional if only one valgrind process is running
==1871== 
==1871== error calling PR_SET_PTRACER, vgdb might block
--1871-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1871== 
==1871== HEAP SUMMARY:
==1871==     in use at exit: 8,189 bytes in 255 blocks
==1871==   total heap usage: 24,556 allocs, 24,301 frees, 1,205,476 bytes allocated
==1871== 
==1871== Searching for pointers to 255 not-freed blocks
==1871== Checked 105,392 bytes
==1871== 
==1871== LEAK SUMMARY:
==1871==    definitely lost: 0 bytes in 0 blocks
==1871==    indirectly lost: 0 bytes in 0 blocks
==1871==      possibly lost: 0 bytes in 0 blocks
==1871==    still reachable: 8,189 bytes in 255 blocks
==1871==         suppressed: 0 bytes in 0 blocks
==1871== Reachable blocks (those to which a pointer was found) are not shown.
==1871== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1871== 
==1871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1872-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1872== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1872-by-wengle-on-???
==1872== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1872-by-wengle-on-???
==1872== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1872-by-wengle-on-???
==1872== 
==1872== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1872== don't want to do, unless you know exactly what you're doing,
==1872== or are doing some strange experiment):
==1872==   /usr/lib/valgrind/../../bin/vgdb --pid=1872 ...command...
==1872== 
==1872== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1872==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1872== and then give GDB the following command
==1872==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1872
==1872== --pid is optional if only one valgrind process is running
==1872== 
==1872== error calling PR_SET_PTRACER, vgdb might block
--1872-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1872== Invalid write of size 1
==1872==    at 0x1337DE: bus_write (bus.c:174)
==1872==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1872==    by 0x1320CD: cpu_dispatch_storage (cpu-storage.c:131)
==1872==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1872==    by 0x12D368: test_LD_HLRU_A (unit-test-cpu-dispatch-week08.c:1228)
==1872==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1872==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1872==  Address 0xffffffff is not stack'd, malloc'd or (recently) free'd
==1872== 
==1872== 
==1872== Process terminating with default action of signal 11 (SIGSEGV)
==1872==  Access not within mapped region at address 0xFFFFFFFF
==1872==    at 0x1337DE: bus_write (bus.c:174)
==1872==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1872==    by 0x1320CD: cpu_dispatch_storage (cpu-storage.c:131)
==1872==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1872==    by 0x12D368: test_LD_HLRU_A (unit-test-cpu-dispatch-week08.c:1228)
==1872==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1872==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1872==  If you believe this happened as a result of a stack
==1872==  overflow in your program's main thread (unlikely but
==1872==  possible), you can try to increase the size of the
==1872==  main thread stack using the --main-stacksize= flag.
==1872==  The main thread stack size used in this run was 8388608.
==1872== 
==1872== HEAP SUMMARY:
==1872==     in use at exit: 73,836 bytes in 260 blocks
==1872==   total heap usage: 24,573 allocs, 24,313 frees, 1,218,679 bytes allocated
==1872== 
==1872== Searching for pointers to 260 not-freed blocks
==1872== Checked 761,056 bytes
==1872== 
==1872== LEAK SUMMARY:
==1872==    definitely lost: 0 bytes in 0 blocks
==1872==    indirectly lost: 0 bytes in 0 blocks
==1872==      possibly lost: 0 bytes in 0 blocks
==1872==    still reachable: 73,836 bytes in 260 blocks
==1872==         suppressed: 0 bytes in 0 blocks
==1872== Reachable blocks (those to which a pointer was found) are not shown.
==1872== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1872== 
==1872== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1872== 
==1872== 1 errors in context 1 of 1:
==1872== Invalid write of size 1
==1872==    at 0x1337DE: bus_write (bus.c:174)
==1872==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1872==    by 0x1320CD: cpu_dispatch_storage (cpu-storage.c:131)
==1872==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1872==    by 0x12D368: test_LD_HLRU_A (unit-test-cpu-dispatch-week08.c:1228)
==1872==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1872==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1872==  Address 0xffffffff is not stack'd, malloc'd or (recently) free'd
==1872== 
==1872== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1873-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1873== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1873-by-wengle-on-???
==1873== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1873-by-wengle-on-???
==1873== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1873-by-wengle-on-???
==1873== 
==1873== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1873== don't want to do, unless you know exactly what you're doing,
==1873== or are doing some strange experiment):
==1873==   /usr/lib/valgrind/../../bin/vgdb --pid=1873 ...command...
==1873== 
==1873== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1873==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1873== and then give GDB the following command
==1873==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1873
==1873== --pid is optional if only one valgrind process is running
==1873== 
==1873== error calling PR_SET_PTRACER, vgdb might block
--1873-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1873== Invalid write of size 1
==1873==    at 0x1337DE: bus_write (bus.c:174)
==1873==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1873==    by 0x13218E: cpu_dispatch_storage (cpu-storage.c:136)
==1873==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1873==    by 0x12DC79: test_LD_HLR_N8 (unit-test-cpu-dispatch-week08.c:1266)
==1873==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1873==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1873==  Address 0x20002000200020 is not stack'd, malloc'd or (recently) free'd
==1873== 
==1873== 
==1873== Process terminating with default action of signal 11 (SIGSEGV)
==1873==  General Protection Fault
==1873==    at 0x1337DE: bus_write (bus.c:174)
==1873==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1873==    by 0x13218E: cpu_dispatch_storage (cpu-storage.c:136)
==1873==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1873==    by 0x12DC79: test_LD_HLR_N8 (unit-test-cpu-dispatch-week08.c:1266)
==1873==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1873==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1873== 
==1873== HEAP SUMMARY:
==1873==     in use at exit: 74,024 bytes in 263 blocks
==1873==   total heap usage: 24,591 allocs, 24,328 frees, 1,232,159 bytes allocated
==1873== 
==1873== Searching for pointers to 263 not-freed blocks
==1873== Checked 761,184 bytes
==1873== 
==1873== LEAK SUMMARY:
==1873==    definitely lost: 0 bytes in 0 blocks
==1873==    indirectly lost: 0 bytes in 0 blocks
==1873==      possibly lost: 0 bytes in 0 blocks
==1873==    still reachable: 74,024 bytes in 263 blocks
==1873==         suppressed: 0 bytes in 0 blocks
==1873== Reachable blocks (those to which a pointer was found) are not shown.
==1873== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1873== 
==1873== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1873== 
==1873== 1 errors in context 1 of 1:
==1873== Invalid write of size 1
==1873==    at 0x1337DE: bus_write (bus.c:174)
==1873==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1873==    by 0x13218E: cpu_dispatch_storage (cpu-storage.c:136)
==1873==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1873==    by 0x12DC79: test_LD_HLR_N8 (unit-test-cpu-dispatch-week08.c:1266)
==1873==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1873==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1873==  Address 0x20002000200020 is not stack'd, malloc'd or (recently) free'd
==1873== 
==1873== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1874-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1874== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1874-by-wengle-on-???
==1874== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1874-by-wengle-on-???
==1874== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1874-by-wengle-on-???
==1874== 
==1874== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1874== don't want to do, unless you know exactly what you're doing,
==1874== or are doing some strange experiment):
==1874==   /usr/lib/valgrind/../../bin/vgdb --pid=1874 ...command...
==1874== 
==1874== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1874==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1874== and then give GDB the following command
==1874==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1874
==1874== --pid is optional if only one valgrind process is running
==1874== 
==1874== error calling PR_SET_PTRACER, vgdb might block
--1874-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1874== Invalid write of size 1
==1874==    at 0x1337DE: bus_write (bus.c:174)
==1874==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1874==    by 0x132222: cpu_dispatch_storage (cpu-storage.c:140)
==1874==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1874==    by 0x12E1F4: test_LD_HLR_R8 (unit-test-cpu-dispatch-week08.c:1297)
==1874==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1874==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1874==  Address 0x1000100000000 is not stack'd, malloc'd or (recently) free'd
==1874== 
==1874== 
==1874== Process terminating with default action of signal 11 (SIGSEGV)
==1874==  General Protection Fault
==1874==    at 0x1337DE: bus_write (bus.c:174)
==1874==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1874==    by 0x132222: cpu_dispatch_storage (cpu-storage.c:140)
==1874==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1874==    by 0x12E1F4: test_LD_HLR_R8 (unit-test-cpu-dispatch-week08.c:1297)
==1874==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1874==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1874== 
==1874== HEAP SUMMARY:
==1874==     in use at exit: 74,212 bytes in 266 blocks
==1874==   total heap usage: 24,609 allocs, 24,343 frees, 1,245,639 bytes allocated
==1874== 
==1874== Searching for pointers to 266 not-freed blocks
==1874== Checked 761,296 bytes
==1874== 
==1874== LEAK SUMMARY:
==1874==    definitely lost: 0 bytes in 0 blocks
==1874==    indirectly lost: 0 bytes in 0 blocks
==1874==      possibly lost: 0 bytes in 0 blocks
==1874==    still reachable: 74,212 bytes in 266 blocks
==1874==         suppressed: 0 bytes in 0 blocks
==1874== Reachable blocks (those to which a pointer was found) are not shown.
==1874== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1874== 
==1874== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1874== 
==1874== 1 errors in context 1 of 1:
==1874== Invalid write of size 1
==1874==    at 0x1337DE: bus_write (bus.c:174)
==1874==    by 0x131BDC: cpu_write_at_idx (cpu-storage.c:43)
==1874==    by 0x132222: cpu_dispatch_storage (cpu-storage.c:140)
==1874==    by 0x109FA2: cpu_dispatch (cpu.c:156)
==1874==    by 0x12E1F4: test_LD_HLR_R8 (unit-test-cpu-dispatch-week08.c:1297)
==1874==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1874==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1874==  Address 0x1000100000000 is not stack'd, malloc'd or (recently) free'd
==1874== 
==1874== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1875-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1875== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1875-by-wengle-on-???
==1875== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1875-by-wengle-on-???
==1875== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1875-by-wengle-on-???
==1875== 
==1875== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1875== don't want to do, unless you know exactly what you're doing,
==1875== or are doing some strange experiment):
==1875==   /usr/lib/valgrind/../../bin/vgdb --pid=1875 ...command...
==1875== 
==1875== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1875==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1875== and then give GDB the following command
==1875==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1875
==1875== --pid is optional if only one valgrind process is running
==1875== 
==1875== error calling PR_SET_PTRACER, vgdb might block
--1875-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1875== Invalid write of size 1
==1875==    at 0x12F242: test_LD_N16R_A (unit-test-cpu-dispatch-week08.c:1331)
==1875==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1875==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1875==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1875== 
==1875== 
==1875== Process terminating with default action of signal 11 (SIGSEGV)
==1875==  Access not within mapped region at address 0x101
==1875==    at 0x12F242: test_LD_N16R_A (unit-test-cpu-dispatch-week08.c:1331)
==1875==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1875==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1875==  If you believe this happened as a result of a stack
==1875==  overflow in your program's main thread (unlikely but
==1875==  possible), you can try to increase the size of the
==1875==  main thread stack using the --main-stacksize= flag.
==1875==  The main thread stack size used in this run was 8388608.
==1875== 
==1875== HEAP SUMMARY:
==1875==     in use at exit: 74,400 bytes in 269 blocks
==1875==   total heap usage: 24,627 allocs, 24,358 frees, 1,259,119 bytes allocated
==1875== 
==1875== Searching for pointers to 269 not-freed blocks
==1875== Checked 761,328 bytes
==1875== 
==1875== LEAK SUMMARY:
==1875==    definitely lost: 0 bytes in 0 blocks
==1875==    indirectly lost: 0 bytes in 0 blocks
==1875==      possibly lost: 0 bytes in 0 blocks
==1875==    still reachable: 74,400 bytes in 269 blocks
==1875==         suppressed: 0 bytes in 0 blocks
==1875== Reachable blocks (those to which a pointer was found) are not shown.
==1875== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1875== 
==1875== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1875== 
==1875== 1 errors in context 1 of 1:
==1875== Invalid write of size 1
==1875==    at 0x12F242: test_LD_N16R_A (unit-test-cpu-dispatch-week08.c:1331)
==1875==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1875==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1875==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1875== 
==1875== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1876-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1876== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1876-by-wengle-on-???
==1876== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1876-by-wengle-on-???
==1876== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1876-by-wengle-on-???
==1876== 
==1876== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1876== don't want to do, unless you know exactly what you're doing,
==1876== or are doing some strange experiment):
==1876==   /usr/lib/valgrind/../../bin/vgdb --pid=1876 ...command...
==1876== 
==1876== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1876==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1876== and then give GDB the following command
==1876==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1876
==1876== --pid is optional if only one valgrind process is running
==1876== 
==1876== error calling PR_SET_PTRACER, vgdb might block
--1876-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1876== Invalid write of size 1
==1876==    at 0x12F849: test_LD_N16R_SP (unit-test-cpu-dispatch-week08.c:1362)
==1876==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1876==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1876==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1876== 
==1876== 
==1876== Process terminating with default action of signal 11 (SIGSEGV)
==1876==  Access not within mapped region at address 0x101
==1876==    at 0x12F849: test_LD_N16R_SP (unit-test-cpu-dispatch-week08.c:1362)
==1876==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1876==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1876==  If you believe this happened as a result of a stack
==1876==  overflow in your program's main thread (unlikely but
==1876==  possible), you can try to increase the size of the
==1876==  main thread stack using the --main-stacksize= flag.
==1876==  The main thread stack size used in this run was 8388608.
==1876== 
==1876== HEAP SUMMARY:
==1876==     in use at exit: 74,588 bytes in 272 blocks
==1876==   total heap usage: 24,645 allocs, 24,373 frees, 1,272,599 bytes allocated
==1876== 
==1876== Searching for pointers to 272 not-freed blocks
==1876== Checked 761,464 bytes
==1876== 
==1876== LEAK SUMMARY:
==1876==    definitely lost: 0 bytes in 0 blocks
==1876==    indirectly lost: 0 bytes in 0 blocks
==1876==      possibly lost: 0 bytes in 0 blocks
==1876==    still reachable: 74,588 bytes in 272 blocks
==1876==         suppressed: 0 bytes in 0 blocks
==1876== Reachable blocks (those to which a pointer was found) are not shown.
==1876== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1876== 
==1876== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1876== 
==1876== 1 errors in context 1 of 1:
==1876== Invalid write of size 1
==1876==    at 0x12F849: test_LD_N16R_SP (unit-test-cpu-dispatch-week08.c:1362)
==1876==    by 0x137415: srunner_run (in /mnt/e/projects/cproj/pps20-projet-xxgameboiizxx/done/unit-test-cpu-dispatch-week08)
==1876==    by 0x131886: main (unit-test-cpu-dispatch-week08.c:1559)
==1876==  Address 0x101 is not stack'd, malloc'd or (recently) free'd
==1876== 
==1876== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--1877-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1877== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1877-by-wengle-on-???
==1877== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1877-by-wengle-on-???
==1877== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1877-by-wengle-on-???
==1877== 
==1877== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1877== don't want to do, unless you know exactly what you're doing,
==1877== or are doing some strange experiment):
==1877==   /usr/lib/valgrind/../../bin/vgdb --pid=1877 ...command...
==1877== 
==1877== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1877==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1877== and then give GDB the following command
==1877==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1877
==1877== --pid is optional if only one valgrind process is running
==1877== 
==1877== error calling PR_SET_PTRACER, vgdb might block
--1877-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1877== 
==1877== HEAP SUMMARY:
==1877==     in use at exit: 9,480 bytes in 273 blocks
==1877==   total heap usage: 24,921 allocs, 24,648 frees, 1,296,199 bytes allocated
==1877== 
==1877== Searching for pointers to 273 not-freed blocks
==1877== Checked 106,120 bytes
==1877== 
==1877== LEAK SUMMARY:
==1877==    definitely lost: 0 bytes in 0 blocks
==1877==    indirectly lost: 0 bytes in 0 blocks
==1877==      possibly lost: 0 bytes in 0 blocks
==1877==    still reachable: 9,480 bytes in 273 blocks
==1877==         suppressed: 0 bytes in 0 blocks
==1877== Reachable blocks (those to which a pointer was found) are not shown.
==1877== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1877== 
==1877== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1877== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1878-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1878== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1878-by-wengle-on-???
==1878== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1878-by-wengle-on-???
==1878== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1878-by-wengle-on-???
==1878== 
==1878== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1878== don't want to do, unless you know exactly what you're doing,
==1878== or are doing some strange experiment):
==1878==   /usr/lib/valgrind/../../bin/vgdb --pid=1878 ...command...
==1878== 
==1878== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1878==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1878== and then give GDB the following command
==1878==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1878
==1878== --pid is optional if only one valgrind process is running
==1878== 
==1878== error calling PR_SET_PTRACER, vgdb might block
--1878-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1878== 
==1878== HEAP SUMMARY:
==1878==     in use at exit: 9,575 bytes in 276 blocks
==1878==   total heap usage: 25,131 allocs, 24,855 frees, 1,315,378 bytes allocated
==1878== 
==1878== Searching for pointers to 276 not-freed blocks
==1878== Checked 106,328 bytes
==1878== 
==1878== LEAK SUMMARY:
==1878==    definitely lost: 0 bytes in 0 blocks
==1878==    indirectly lost: 0 bytes in 0 blocks
==1878==      possibly lost: 0 bytes in 0 blocks
==1878==    still reachable: 9,575 bytes in 276 blocks
==1878==         suppressed: 0 bytes in 0 blocks
==1878== Reachable blocks (those to which a pointer was found) are not shown.
==1878== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1878== 
==1878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1879-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1879== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1879-by-wengle-on-???
==1879== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1879-by-wengle-on-???
==1879== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1879-by-wengle-on-???
==1879== 
==1879== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1879== don't want to do, unless you know exactly what you're doing,
==1879== or are doing some strange experiment):
==1879==   /usr/lib/valgrind/../../bin/vgdb --pid=1879 ...command...
==1879== 
==1879== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1879==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1879== and then give GDB the following command
==1879==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1879
==1879== --pid is optional if only one valgrind process is running
==1879== 
==1879== error calling PR_SET_PTRACER, vgdb might block
--1879-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1879== 
==1879== HEAP SUMMARY:
==1879==     in use at exit: 9,670 bytes in 279 blocks
==1879==   total heap usage: 25,605 allocs, 25,326 frees, 1,344,809 bytes allocated
==1879== 
==1879== Searching for pointers to 279 not-freed blocks
==1879== Checked 106,416 bytes
==1879== 
==1879== LEAK SUMMARY:
==1879==    definitely lost: 0 bytes in 0 blocks
==1879==    indirectly lost: 0 bytes in 0 blocks
==1879==      possibly lost: 0 bytes in 0 blocks
==1879==    still reachable: 9,670 bytes in 279 blocks
==1879==         suppressed: 0 bytes in 0 blocks
==1879== Reachable blocks (those to which a pointer was found) are not shown.
==1879== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1879== 
==1879== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1879== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1880-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1880== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1880-by-wengle-on-???
==1880== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1880-by-wengle-on-???
==1880== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1880-by-wengle-on-???
==1880== 
==1880== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1880== don't want to do, unless you know exactly what you're doing,
==1880== or are doing some strange experiment):
==1880==   /usr/lib/valgrind/../../bin/vgdb --pid=1880 ...command...
==1880== 
==1880== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1880==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1880== and then give GDB the following command
==1880==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1880
==1880== --pid is optional if only one valgrind process is running
==1880== 
==1880== error calling PR_SET_PTRACER, vgdb might block
--1880-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1880== 
==1880== HEAP SUMMARY:
==1880==     in use at exit: 9,765 bytes in 282 blocks
==1880==   total heap usage: 25,659 allocs, 25,377 frees, 1,357,038 bytes allocated
==1880== 
==1880== Searching for pointers to 282 not-freed blocks
==1880== Checked 106,504 bytes
==1880== 
==1880== LEAK SUMMARY:
==1880==    definitely lost: 0 bytes in 0 blocks
==1880==    indirectly lost: 0 bytes in 0 blocks
==1880==      possibly lost: 0 bytes in 0 blocks
==1880==    still reachable: 9,765 bytes in 282 blocks
==1880==         suppressed: 0 bytes in 0 blocks
==1880== Reachable blocks (those to which a pointer was found) are not shown.
==1880== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1880== 
==1880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1881-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1881== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1881-by-wengle-on-???
==1881== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1881-by-wengle-on-???
==1881== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1881-by-wengle-on-???
==1881== 
==1881== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1881== don't want to do, unless you know exactly what you're doing,
==1881== or are doing some strange experiment):
==1881==   /usr/lib/valgrind/../../bin/vgdb --pid=1881 ...command...
==1881== 
==1881== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1881==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1881== and then give GDB the following command
==1881==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1881
==1881== --pid is optional if only one valgrind process is running
==1881== 
==1881== error calling PR_SET_PTRACER, vgdb might block
--1881-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1881== 
==1881== HEAP SUMMARY:
==1881==     in use at exit: 9,860 bytes in 285 blocks
==1881==   total heap usage: 29,009 allocs, 28,724 frees, 1,495,177 bytes allocated
==1881== 
==1881== Searching for pointers to 285 not-freed blocks
==1881== Checked 106,592 bytes
==1881== 
==1881== LEAK SUMMARY:
==1881==    definitely lost: 0 bytes in 0 blocks
==1881==    indirectly lost: 0 bytes in 0 blocks
==1881==      possibly lost: 0 bytes in 0 blocks
==1881==    still reachable: 9,860 bytes in 285 blocks
==1881==         suppressed: 0 bytes in 0 blocks
==1881== Reachable blocks (those to which a pointer was found) are not shown.
==1881== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1881== 
==1881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1882-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1882== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1882-by-wengle-on-???
==1882== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1882-by-wengle-on-???
==1882== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1882-by-wengle-on-???
==1882== 
==1882== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1882== don't want to do, unless you know exactly what you're doing,
==1882== or are doing some strange experiment):
==1882==   /usr/lib/valgrind/../../bin/vgdb --pid=1882 ...command...
==1882== 
==1882== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1882==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1882== and then give GDB the following command
==1882==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1882
==1882== --pid is optional if only one valgrind process is running
==1882== 
==1882== error calling PR_SET_PTRACER, vgdb might block
--1882-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1882== 
==1882== HEAP SUMMARY:
==1882==     in use at exit: 9,955 bytes in 288 blocks
==1882==   total heap usage: 29,029 allocs, 28,741 frees, 1,490,313 bytes allocated
==1882== 
==1882== Searching for pointers to 288 not-freed blocks
==1882== Checked 106,680 bytes
==1882== 
==1882== LEAK SUMMARY:
==1882==    definitely lost: 0 bytes in 0 blocks
==1882==    indirectly lost: 0 bytes in 0 blocks
==1882==      possibly lost: 0 bytes in 0 blocks
==1882==    still reachable: 9,955 bytes in 288 blocks
==1882==         suppressed: 0 bytes in 0 blocks
==1882== Reachable blocks (those to which a pointer was found) are not shown.
==1882== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1882== 
==1882== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1882== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--1883-- REDIR: 0x5991f50 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==1883== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1883-by-wengle-on-???
==1883== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1883-by-wengle-on-???
==1883== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1883-by-wengle-on-???
==1883== 
==1883== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1883== don't want to do, unless you know exactly what you're doing,
==1883== or are doing some strange experiment):
==1883==   /usr/lib/valgrind/../../bin/vgdb --pid=1883 ...command...
==1883== 
==1883== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1883==   /path/to/gdb ./unit-test-cpu-dispatch-week08
==1883== and then give GDB the following command
==1883==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1883
==1883== --pid is optional if only one valgrind process is running
==1883== 
==1883== error calling PR_SET_PTRACER, vgdb might block
--1883-- REDIR: 0x589d030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==1883== 
==1883== HEAP SUMMARY:
==1883==     in use at exit: 10,050 bytes in 291 blocks
==1883==   total heap usage: 29,049 allocs, 28,758 frees, 1,503,764 bytes allocated
==1883== 
==1883== Searching for pointers to 291 not-freed blocks
==1883== Checked 106,768 bytes
==1883== 
==1883== LEAK SUMMARY:
==1883==    definitely lost: 0 bytes in 0 blocks
==1883==    indirectly lost: 0 bytes in 0 blocks
==1883==      possibly lost: 0 bytes in 0 blocks
==1883==    still reachable: 10,050 bytes in 291 blocks
==1883==         suppressed: 0 bytes in 0 blocks
==1883== Reachable blocks (those to which a pointer was found) are not shown.
==1883== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1883== 
==1883== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1883== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
77%: Checks: 40, Failures: 0, Errors: 9
unit-test-cpu-dispatch-week08.c:67:P:Cpu Basic Dispatch Tests:dispatch_err:0: Passed
unit-test-cpu-dispatch-week08.c:131:P:Cpu Dispatch ALU ADD Tests:test_ADD_A_HLR:0: Passed
unit-test-cpu-dispatch-week08.c:156:P:Cpu Dispatch ALU ADD Tests:test_ADC_A_HLR:0: Passed
unit-test-cpu-dispatch-week08.c:181:P:Cpu Dispatch ALU ADD Tests:test_ADD_A_N8:0: Passed
unit-test-cpu-dispatch-week08.c:206:P:Cpu Dispatch ALU ADD Tests:test_ADC_A_N8:0: Passed
unit-test-cpu-dispatch-week08.c:244:P:Cpu Dispatch ALU ADD Tests:test_ADD_A_R8:0: Passed
unit-test-cpu-dispatch-week08.c:284:P:Cpu Dispatch ALU ADD Tests:test_ADC_A_R8:0: Passed
unit-test-cpu-dispatch-week08.c:374:P:Cpu Dispatch ALU ADD Tests:test_ADD_HL_R16:0: Passed
unit-test-cpu-dispatch-week08.c:313:P:Cpu Dispatch ALU ADD Tests:test_INC8:0: Passed
unit-test-cpu-dispatch-week08.c:338:P:Cpu Dispatch ALU ADD Tests:test_INC16:0: Passed
unit-test-cpu-dispatch-week08.c:416:P:Cpu Dispatch ALU ROT Tests:test_ROT_R8:0: Passed
unit-test-cpu-dispatch-week08.c:445:P:Cpu Dispatch ALU SHIFT Tests:test_SLA_R8:0: Passed
unit-test-cpu-dispatch-week08.c:486:P:Cpu Dispatch ALU CP Tests:test_CP_A_R8:0: Passed
unit-test-cpu-dispatch-week08.c:554:P:Cpu Dispatch ALU BIT/CHG Tests:test_BIT_U3_R8:0: Passed
unit-test-cpu-dispatch-week08.c:635:P:Cpu Dispatch ALU BIT/CHG Tests:test_CHG_U3_R8:0: Passed
unit-test-cpu-dispatch-week08.c:828:P:Cpu Dispatch LD LOAD Tests:test_LD_A_BCR:0: Passed
unit-test-cpu-dispatch-week08.c:854:P:Cpu Dispatch LD LOAD Tests:test_LD_A_CR:0: Passed
unit-test-cpu-dispatch-week08.c:880:P:Cpu Dispatch LD LOAD Tests:test_LD_A_DER:0: Passed
unit-test-cpu-dispatch-week08.c:923:E:Cpu Dispatch LD LOAD Tests:test_LD_A_HLRU:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:908:P:Cpu Dispatch LD LOAD Tests:test_LD_A_HLR:0: Passed
unit-test-cpu-dispatch-week08.c:964:E:Cpu Dispatch LD LOAD Tests:test_LD_A_N16R:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1005:P:Cpu Dispatch LD LOAD Tests:test_LD_A_N8R:0: Passed
unit-test-cpu-dispatch-week08.c:1029:E:Cpu Dispatch LD LOAD Tests:test_LD_R16SP_N16:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1113:P:Cpu Dispatch LD LOAD Tests:test_LD_R8_N8:0: Passed
unit-test-cpu-dispatch-week08.c:1065:E:Cpu Dispatch LD LOAD Tests:test_LD_R8_HLR:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1145:P:Cpu Dispatch LD STORE Tests:test_LD_BCR_A:0: Passed
unit-test-cpu-dispatch-week08.c:1171:P:Cpu Dispatch LD STORE Tests:test_LD_CR_A:0: Passed
unit-test-cpu-dispatch-week08.c:1197:P:Cpu Dispatch LD STORE Tests:test_LD_DER_A:0: Passed
unit-test-cpu-dispatch-week08.c:1213:E:Cpu Dispatch LD STORE Tests:test_LD_HLRU_A:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1254:E:Cpu Dispatch LD STORE Tests:test_LD_HLR_N8:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1289:E:Cpu Dispatch LD STORE Tests:test_LD_HLR_R8:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1319:E:Cpu Dispatch LD STORE Tests:test_LD_N16R_A:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:1350:E:Cpu Dispatch LD STORE Tests:test_LD_N16R_SP:0: (after this point) Received signal 11 (Segmentation fault)
unit-test-cpu-dispatch-week08.c:710:P:Cpu Dispatch LD SP-PP Tests:test_PUSH_R16:0: Passed
unit-test-cpu-dispatch-week08.c:749:P:Cpu Dispatch LD SP-PP Tests:test_POP_R16:0: Passed
unit-test-cpu-dispatch-week08.c:799:P:Cpu Dispatch LD SP-PP Tests:test_PUSH_POP_R16:0: Passed
unit-test-cpu-dispatch-week08.c:1393:P:Cpu Dispatch LD MISC Tests:test_LD_SP_HL:0: Passed
unit-test-cpu-dispatch-week08.c:1431:P:Cpu Dispatch LD MISC Tests:test_LD_R8_R8:0: Passed
unit-test-cpu-dispatch-week08.c:1455:P:Cpu Dispatch OTHER Tests:test_STOP:0: Passed
unit-test-cpu-dispatch-week08.c:1471:P:Cpu Dispatch OTHER Tests:test_NOP:0: Passed
==1843== 
==1843== HEAP SUMMARY:
==1843==     in use at exit: 0 bytes in 0 blocks
==1843==   total heap usage: 29,101 allocs, 29,101 frees, 1,452,487 bytes allocated
==1843== 
==1843== All heap blocks were freed -- no leaks are possible
==1843== 
==1843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
